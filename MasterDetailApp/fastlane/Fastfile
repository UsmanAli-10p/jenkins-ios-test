# This file contains the fastlane.tools configuration
# You can find the documentation at https://docs.fastlane.tools
#
# For a list of all available actions, check out
#
#     https://docs.fastlane.tools/actions
#
# For a list of all available plugins, check out
#
#     https://docs.fastlane.tools/plugins/available-plugins
#

# Uncomment the line if you want fastlane to automatically update itself
# update_fastlane

keyChainName="MasterDetailApp.keychain"
stubKeyChainPassword="stub"
sdk = "iphoneos11.2"

default_platform(:ios)

desc "Common setup for all lanes"
before_all do |lane, options|
  cocoapods()
end

platform :ios do
  desc "Description of what the lane does"

  lane :developerRelease do
    qaRelease()
  end

  lane :prod do
    qaRelease()
  end

  lane :qaRelease do
    delete_keychain(name: keyChainName) rescue nil
    create_keychain(
            name: keyChainName,
            password: stubKeyChainPassword,
            default_keychain: false,
            unlock: true,
            timeout: 3600,
            lock_when_sleeps: true,
            add_to_search_list: true
        )

    import_certificate(
            keychain_name: keyChainName,
            keychain_password: stubKeyChainPassword,
            certificate_path: "./Certs/DevelopmentCertificate.p12",
            certificate_password: ""
        )

    # update_project_provisioning(
    #         xcodeproj: "MasterDetailApp.xcodeproj",
    #         profile: "./Certs/Hologic_IBMT_Development.mobileprovision",
    #         target_filter: "MasterDetailApp",
    #         build_configuration: "Release"
    #     )

    gym(
            workspace: "MasterDetailApp.xcworkspace",
            scheme: "MasterDetailApp",
            clean: true,
            output_directory: "./output/",
            output_name: "MasterDetailApp.ipa",
            configuration: "Release",
            silent: true,
            export_method: "development",
            export_options: "./fastlane/QaReleaseExportOptions.plist",
        )

    delete_keychain(name: keyChainName) rescue nil
  end
end
